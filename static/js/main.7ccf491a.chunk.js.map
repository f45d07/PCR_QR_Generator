{"version":3,"sources":["App.js","serviceWorker.js","index.js","logo.png"],"names":["QRCode","require","App","props","handleInputChange","e","val","target","value","name","setState","prevState","data_cp","data","handleDateChange","formattedValue","birthday","handleShowForm","bind","handleShowCode","state","isCodeVisible","isFormVisible","startDate","Date","this","copy","Object","assign","getDate","getMonth","getFullYear","str","JSON","stringify","replace","chr","charCodeAt","toString","substr","console","log","imageSettings","height","window","innerHeight","width","innerWidth","size","DateInput","onClick","Form","Control","type","className","Container","src","logo","Nav","variant","defaultActiveKey","Item","Link","eventKey","onSelect","Row","Col","lg","md","sm","xl","xs","GenerateQRString","Group","Label","firstname","onChange","surname","secondname","citizenship","phone","email","selected","customInput","doc","address","other_1","other_2","other_3","other_4","React","Component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.7ccf491a.chunk.js","sourcesContent":["import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { Container, Row, Col, Nav, Form } from 'react-bootstrap';\n\nimport DatePicker from \"react-datepicker\"; \nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport logo from \"./logo.png\";\n\nvar QRCode = require('qrcode.react');\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleShowForm = this.handleShowForm.bind(this);\n    this.handleShowCode = this.handleShowCode.bind(this);\n    this.state = {\n      isCodeVisible: false,\n      isFormVisible: true,\n      startDate: new Date(),\n      data: { \n        birthday: new Date()\n      }\n    };\n  }\n\n  handleShowForm() {\n    this.setState({isFormVisible: true});\n    this.setState({isCodeVisible: false});\n  }\n\n  handleShowCode() {\n    this.setState({isCodeVisible: true});\n    this.setState({isFormVisible: false});\n  }\n\n  handleInputChange = (e) => {\n    const val = e.target.value;\n    const name = e.target.name;\n    this.setState(function (prevState, props) {\n      var data_cp = prevState.data;\n      data_cp[name] = val;\n      return {\n        data: data_cp\n      }\n    });\n  }\n\n  handleDateChange = (formattedValue) => {\n    this.setState(function (prevState, props) {\n      var data_cp = prevState.data;\n      data_cp.birthday = formattedValue;\n      return {\n        data: data_cp\n      }\n    });\n  }\n\n  GenerateQRString(data) {\n    var copy = Object.assign({}, data);\n    copy.birthday = copy.birthday.getDate() + \".\" + copy.birthday.getMonth() + \".\" + copy.birthday.getFullYear();\n    var str = JSON.stringify(copy);\n    str  = str.replace(/[\\u007F-\\uFFFF]/g, function(chr) {\n      return \"\\\\u\" + (\"0000\" + chr.charCodeAt(0).toString(16)).substr(-4)\n    });\n    console.log(str);\n    return str;\n  }\n\n  render() {\n    var imageSettings = {\n      height: window.innerHeight,\n      width:  window.innerWidth,\n      size: 0\n    };\n\n    if(imageSettings.height > imageSettings.width ) {\n      imageSettings.size = imageSettings.width - (imageSettings.width * 0.3);\n    }\n    else {\n      imageSettings.size = imageSettings.height - (imageSettings.height * 0.3);\n    }\n\n    const DateInput = ({ value, onClick }) => (\n      <Form.Control name=\"birthday\" type=\"text\" value={value} onClick={onClick} />\n    );\n\n    return (\n      <div className=\"App\">\n        <Container>\n          <p className=\"text-center mt-4 mb-4\">\n            <img src={logo} width={170} className=\"logo-image\"/>\n            <h4>Регистрация пациента для получения QR кода</h4>\n            <Nav variant=\"pills\" defaultActiveKey=\"link-1\" className=\"justify-content-center row text-center mt-4 mb-4\">\n              <Nav.Item>\n                <Nav.Link eventKey=\"link-1\" onSelect={this.handleShowForm}>Редактор</Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link eventKey=\"link-2\" onSelect={this.handleShowCode}>Код</Nav.Link>\n              </Nav.Item>\n          </Nav>\n          </p>\n        </Container>\n        <Container>\n          <Row className=\"justify-content-center\">\n            <Col></Col>\n            <Col lg=\"auto\" md=\"auto\" sm=\"auto\" xl=\"auto\" xs=\"auto\">\n              {this.state.isCodeVisible? <p className=\"ready-code-info\">Ваш код готов! Сделайте снимок экрана.</p>: <p></p> }\n              {this.state.isCodeVisible? <QRCode value={this.GenerateQRString(this.state.data)} size={imageSettings.size} /> : <p>Заполните данные и нажмите <b>Код</b></p> }\n            </Col>\n            <Col></Col>\n          </Row>\n        </Container>        \n        <Container>\n          <Row className=\"justify-content-center\">\n            <Col lg=\"auto\" md=\"auto\" sm=\"auto\" xl=\"auto\" xs=\"auto\">\n              {this.state.isFormVisible? \n                    <Form.Group>\n                      <Row className=\"justify-content-center\">\n                        <Col xs=\"auto\">\n                          <Form.Label>Имя пациента</Form.Label>\n                          <Form.Control name=\"firstname\" type=\"text\" value={this.state.data.firstname} onChange={this.handleInputChange} />\n                          <Form.Label>Фамилия пациента</Form.Label>\n                          <Form.Control name=\"surname\" type=\"text\" value={this.state.data.surname} onChange={this.handleInputChange} />\n                          <Form.Label>Отчество пациента</Form.Label>\n                          <Form.Control name=\"secondname\" type=\"text\" value={this.state.data.secondname} onChange={this.handleInputChange} />\n                          <Form.Label>Гражданство</Form.Label>\n                          <Form.Control name=\"citizenship\" type=\"text\" value={this.state.data.citizenship} onChange={this.handleInputChange} />\n                          <Form.Label>Телефон</Form.Label>\n                          <Form.Control name=\"phone\" type=\"text\" value={this.state.data.phone} onChange={this.handleInputChange} />\n                          <Form.Label>Почта</Form.Label>\n                          <Form.Control name=\"email\" type=\"text\" value={this.state.data.email} onChange={this.handleInputChange} />\n                          <Form.Label>Дата рождения</Form.Label>\n                          <DatePicker selected={this.state.data.birthday} onChange={this.handleDateChange} customInput={<DateInput />} />                          \n                        </Col>\n                        <Col xs=\"auto\">                          \n                          <Form.Label>Паспорт</Form.Label>\n                          <Form.Control name=\"doc\" type=\"text\" value={this.state.data.doc} onChange={this.handleInputChange} />\n                          <Form.Label>Адрес</Form.Label>\n                          <Form.Control name=\"address\" type=\"text\" value={this.state.data.address} onChange={this.handleInputChange} />\n                          <Form.Label>Примечание 1</Form.Label>\n                          <Form.Control name=\"other_1\" type=\"text\" value={this.state.data.other_1} onChange={this.handleInputChange} />\n                          <Form.Label>Примечание 2</Form.Label>\n                          <Form.Control name=\"other_2\" type=\"text\" value={this.state.data.other_2} onChange={this.handleInputChange} />\n                          <Form.Label>Примечание 3</Form.Label>\n                          <Form.Control name=\"other_3\" type=\"text\" value={this.state.data.other_3} onChange={this.handleInputChange} />\n                          <Form.Label>Примечание 4</Form.Label>\n                          <Form.Control name=\"other_4\" type=\"text\" value={this.state.data.other_4} onChange={this.handleInputChange} />\n                        </Col>\n                      </Row>\n                    </Form.Group> : <Container className=\"ReturnInfo\"><p>Для изменения кода вернитесь в <b>Редактор</b></p></Container> }              \n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.bd39f4dc.png\";"],"sourceRoot":""}